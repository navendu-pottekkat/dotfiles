name: IstioFilterPatternXYZ
version: 0.0.1
services:
  genericIstioFilter:
    type: EnvoyFilterIstio
    namespace: test-ns
    settings:
      configPatches:
      # The first patch defines a named Wasm extension and provides a URL to fetch Wasm binary from,
      # and the binary configuration. It should come before the next patch that applies it.
      # This resource is visible to all proxies in the namespace "myns". It is possible to provide
      # multiple definitions for the same name "my-wasm-extension" in multiple namespaces. We recommend that:
      # - if overriding is desired, then the root level definition can be overriden per namespace with REPLACE.
      # - if overriding is not desired, then the name should be qualified with the namespace "myns/my-wasm-extension",
      #   to avoid accidental name collisions.
      - applyTo: EXTENSION_CONFIG
        patch:
          operation: ADD # REPLACE is also supported, and would override a cluster level resource with the same name.
          value:
            name: my-wasm-extension
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              config:
                root_id: my-wasm-root-id
                vm_config:
                  vm_id: my-wasm-vm-id
                  runtime: envoy.wasm.runtime.v8
                  code:
                    remote:
                      http_uri:
                        uri: https://storage.googleapis.com/istio-ecosystem/wasm-extensions/example/1.9.0.wasm
                configuration:
                  "@type": "type.googleapis.com/google.protobuf.StringValue"
                  value: |
                    {}
      # The second patch instructs to apply the above Wasm filter to the listener/http connection manager.
      - applyTo: HTTP_FILTER
        match:
          context: SIDECAR_INBOUND
        patch:
          operation: ADD
          filterClass: AUTHZ # This filter will run *after* the Istio authz filter.
          value:
            name: my-wasm-extension # This must match the name above
            config_discovery:
              config_source:
                api_config_source:
                  api_type: GRPC
                  transport_api_version: V3
                  grpc_services:
                  - envoy_grpc:
                      cluster_name: xds-grpc
              type_urls: ["envoy.extensions.filters.http.wasm.v3.Wasm"]
